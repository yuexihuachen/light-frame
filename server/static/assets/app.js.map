{"version":3,"file":"app.js","sources":["../../../client/src/app/services/api.ts","../../../client/src/app/store.ts","../../../client/src/app/services/category.ts","../../../../../../../../logo.svg","../../../client/src/utils/utils.ts","../../../client/src/features/header/header.tsx","../../../client/src/App.tsx","../../../client/src/app/services/post.ts","../../../../../../../../search.svg","../../../client/src/features/aside/aside.tsx","../../../client/src/index.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery, retry } from '@reduxjs/toolkit/query/react';\nimport { nanoid } from \"nanoid\";\nimport { RootState } from '../store'\n\n// Create our baseQuery instance\nconst baseQuery = fetchBaseQuery({\n  baseUrl: '/',\n  prepareHeaders: (headers, { getState }) => {\n    // 使用getState 访问您的 redux 存储\n    const store = (getState() as RootState);\n    // if (token) {\n    //   headers.set('authentication', `Bearer ${token}`)\n    // }\n    console.log(store);\n\n    const requestId = nanoid();\n    headers.set('X-Request-ID', requestId);\n    return headers\n  },\n})\n\n// 将baseQuery包装到api里\nconst baseQueryWithRetry = retry(baseQuery, { maxRetries: 2 })\n\n/**\n * 提供一个固定的请求路径\n * reducerPath用于在 Redux store（数据存储中心）中确定 API 相关 reducer的挂载路径。\n * tagTypes用于定义一组标签（tags）类型，这些标签主要用于缓存失效（cache invalidation）和数据更新的同步。\n * endpoints描述了如何与服务器进行通信以获取、更新、删除或创建数据。\n */\nexport const api = createApi({\n  reducerPath: 'splitApi',\n  baseQuery: baseQueryWithRetry,\n  tagTypes: ['Category', 'PostList', 'Post'],\n  endpoints: () => ({}),\n})\n","import { configureStore, ConfigureStoreOptions } from '@reduxjs/toolkit';\nimport { api } from './services/api'\n\n\nexport const createStore = (\n  options?: ConfigureStoreOptions['preloadedState'] | undefined,\n) =>\n  configureStore({\n    reducer: {\n      [api.reducerPath]: api.reducer\n    },\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware().concat(api.middleware),\n    ...options,\n  })\n\nexport const store = createStore()\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch","import { api } from './api'\nimport {Response, CategoryItem} from \"../../interface/index\"\n\nexport const categoryApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    getCategoryInfo: build.query<Response<CategoryItem[]>, void>({\n      query: () => 'category/find',\n      providesTags: ['Category'],\n    })\n  }),\n})\n\nexport const {\n  useGetCategoryInfoQuery\n} = categoryApi\n","export default \"__VITE_PUBLIC_ASSET__c21f559f__\"","const deepClone = (obj: any) => {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport {\n    deepClone\n}","import { useParams, useNavigate } from \"react-router-dom\";\nimport { useGetCategoryInfoQuery } from \"../../app/services/category\";\nimport viteLogo from \"/logo.svg\";\nimport { CategoryItem } from \"../../interface\";\nimport { deepClone } from \"../../utils/utils\";\nimport { useEffect } from \"react\";\n\nexport function Header() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const param = params.id || \"JavaScript\";\n  const { data, isLoading } = useGetCategoryInfoQuery();\n  let menus: Partial<CategoryItem>[] = []\n  if (!isLoading) {\n    menus = deepClone(data!.data).sort((a: CategoryItem, b: CategoryItem) => a.order - b.order) as CategoryItem[];\n  }\n  useEffect(() => {\n    const sessionCategory = sessionStorage.getItem('category')\n    if (!isLoading && !sessionCategory) {\n      sessionStorage.setItem('category', JSON.stringify(data?.data[0]))\n    }\n  }, [isLoading])\n\n  const onCategory = (category: Partial<CategoryItem>) => {\n    sessionStorage.setItem('category', JSON.stringify(category))\n    navigate(`/${category.name}`)\n  }\n  return (\n    <>\n      <div className=\"z-[101] lg:border-b bg-white sticky top-0\">\n        <header className=\"sticky top-0 flex m-auto bg-white max-w-screen-2xl lg:px-8\">\n          <div className=\"flex items-center w-[19rem] py-4\">\n            <img\n              src={viteLogo}\n              alt=\"Logo\"\n              className=\"w-7 h-7 text-gradient-to-r from-purple-500 to-pink-500\"\n              width={28}\n              height={28}\n            />\n            <a href=\"/\" className=\"pl-2 text-xl font-bold text-slate-900\">\n              星辰大海\n            </a>\n          </div>\n          <div className=\"flex items-center\">\n            <nav className=\"h-full text-base font-medium leading-6 text-slate-700\">\n              <ul className=\"flex items-center h-full space-x-8\">\n                {!isLoading &&\n                  menus.map((category) => {\n                    return (\n                      <li\n                        key={category._id}\n                        onClick={() => onCategory(category)}\n                        className={`inline-flex items-center h-full border-b-2 cursor-pointer hover:text-purple-700 ${\n                          param === category.name\n                            ? \"border-purple-700 text-purple-700\"\n                            : \"hover:border-purple-700 border-b-white\"\n                        }`}\n                      >\n                        {category.alias}\n                      </li>\n                    );\n                  })}\n              </ul>\n            </nav>\n          </div>\n\n          {isLoading && (\n            <>\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((index: number) => {\n                return (\n                  <div\n                    key={index}\n                    className=\"w-16 h-8 mx-3 my-auto text-center rounded bg-slate-50 text-slate-500\"\n                  ></div>\n                );\n              })}\n            </>\n          )}\n        </header>\n      </div>\n    </>\n  );\n}\n","import {Outlet} from \"react-router-dom\";\nimport {Header} from './features/header/header.tsx';\nimport './App.css'\n\nfunction App() {\n  return (\n    <>\n    <Header />\n    <div className=\"overflow-hidden\">\n    <div className=\"px-4 m-auto max-w-screen-2xl md:px-8\">\n      <Outlet />\n    </div>\n  </div>\n    </>\n  )\n}\n\nexport default App\n","import { api } from './api'\nimport {Response, PostItem} from \"../../interface/index\"\n\nexport const postApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    getPostInfo: build.query<Response<Omit<PostItem, 'content'>[]>, void>({\n      query: () => 'post/find',\n      providesTags: ['Post'],\n    })\n  }),\n})\n\nexport const {\n  useGetPostInfoQuery\n} = postApi\n","export default \"__VITE_PUBLIC_ASSET__8717047f__\"","\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useGetPostInfoQuery } from \"../../app/services/post\";\nimport Search from \"/search.svg\";\nimport { PostItem } from \"../../interface/index\"\n\nexport default function SideNav() {\n  const [searchWord, setSearchWord] = useState<string>('');\n  const [selectedPost, setSelectedPost] = useState<Partial<Omit<PostItem, 'content'>>>({})\n  const { data, isLoading } = useGetPostInfoQuery();\n  const sessionCategory = sessionStorage.getItem('category')\n\n  const changeWord = (value: string) => {\n    setSearchWord(value);\n  }\n\n  const filterPosts = (posts: Omit<PostItem, 'content'>[]) => {\n    const filterPost = posts.filter((post: Omit<PostItem, 'content'>) => post.title.includes(searchWord))\n    return filterPost\n  }\n\n  const selectPost = (post: Omit<PostItem, 'content'>) => {\n    setSelectedPost(post)\n  };\n\n  useEffect(() => {\n    if (!selectedPost?._id && !isLoading) {\n      setSelectedPost(data?.data[0] as Omit<PostItem, 'content'>)\n    }\n  }, [isLoading, sessionCategory])\n\n  return (\n    <nav id=\"nav\" className=\"lg:text-sm lg:leading-6\">\n      <div className=\"sticky top-0 -ml-0.5\">\n        <div className=\"h-6 bg-white\"></div>\n        <div className=\"relative\">\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3\">\n            <img src={Search} alt=\"search Logo\" width={16} height={16} />\n          </div>\n          <input\n            type=\"text\"\n            value={searchWord}\n            onChange={(e) => changeWord(e.target.value)}\n            className=\"block w-full rounded-md border-0 py-1.5 pl-9 pr-20 shadow-sm ring-1 ring-inset ring-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-purple-700\"\n          />\n        </div>\n        <div className=\"bg-gradient-to-b from-white\"></div>\n      </div>\n      <ul>\n        {!isLoading && filterPosts(data?.data as Omit<PostItem, 'content'>[]).map((post: Omit<PostItem, 'content'>) => {\n          return (\n            <li key={post._id} className=\"mt-2\">\n              <div\n                onClick={() => selectPost(post)}\n                className={`truncate text-base px-6 py-2 rounded text-slate-700 font-medium ${\n                  selectedPost._id === post._id\n                    ? \"bg-purple-100\"\n                    : \"hover:bg-purple-50\"\n                }`}\n              >\n                {post.title}\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport SideNav from \"./features/aside/aside\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App />,\n    errorElement: <div>error</div>,\n    children: [\n      {\n        path: \"/:id?\",\n        element: (\n          <>\n            <div className=\"lg:block fixed w-[20.2666rem] inset-0 z-20  top-[3.8125rem] left-[max(0px,calc(50%-48rem))] right-auto pb-10 pl-8 pr-6 overflow-y-auto\">\n              <SideNav />\n            </div>\n            <div className=\"lg:pl-[20.8rem]\">\n              <main className=\"relative z-20 max-w-3xl pt-10 xl:max-w-none  h-[calc(100vh-61px)] overflow-y-auto\">\n                hello content\n              </main>\n            </div>\n          </>\n        ),\n      },\n    ],\n  },\n]);\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <StrictMode>\n    <Provider store={store}>\n      <RouterProvider router={router} />\n    </Provider>\n  </StrictMode>\n);\n"],"names":["baseQuery","fetchBaseQuery","headers","getState","store","requestId","nanoid","baseQueryWithRetry","retry","api","createApi","createStore","options","configureStore","getDefaultMiddleware","categoryApi","build","useGetCategoryInfoQuery","viteLogo","deepClone","obj","Header","navigate","useNavigate","param","useParams","data","isLoading","menus","a","b","useEffect","sessionCategory","onCategory","category","jsxDEV","Fragment","index","App","Outlet","postApi","useGetPostInfoQuery","Search","SideNav","searchWord","setSearchWord","useState","selectedPost","setSelectedPost","changeWord","value","filterPosts","posts","post","selectPost","e","router","createBrowserRouter","this","createRoot","StrictMode","Provider","RouterProvider"],"mappings":"2HAKA,MAAMA,EAAYC,EAAe,CAC/B,QAAS,IACT,eAAgB,CAACC,EAAS,CAAE,SAAAC,KAAe,CAEzC,MAAMC,EAASD,EAAS,EAIxB,QAAQ,IAAIC,CAAK,EAEjB,MAAMC,EAAYC,EAAO,EACjB,OAAAJ,EAAA,IAAI,eAAgBG,CAAS,EAC9BH,CAAA,CAEX,CAAC,EAGKK,EAAqBC,EAAMR,EAAW,CAAE,WAAY,EAAG,EAQhDS,EAAMC,EAAU,CAC3B,YAAa,WACb,UAAWH,EACX,SAAU,CAAC,WAAY,WAAY,MAAM,EACzC,UAAW,KAAO,CAAC,EACrB,CAAC,EC/BYI,EACXC,GAEAC,EAAe,CACb,QAAS,CACP,CAACJ,EAAI,WAAW,EAAGA,EAAI,OACzB,EACA,WAAaK,GACXA,EAAuB,EAAA,OAAOL,EAAI,UAAU,EAC9C,GAAGG,CACL,CAAC,EAEUR,EAAQO,EAAY,ECbpBI,EAAcN,EAAI,gBAAgB,CAC7C,UAAYO,IAAW,CACrB,gBAAiBA,EAAM,MAAsC,CAC3D,MAAO,IAAM,gBACb,aAAc,CAAC,UAAU,CAC1B,CAAA,CACH,EACF,CAAC,EAEY,CACX,wBAAAC,CACF,EAAIF,ECdWG,EAAA,YCATC,EAAaC,GACR,KAAK,MAAM,KAAK,UAAUA,CAAG,CAAC,ECMlC,SAASC,GAAS,CACvB,MAAMC,EAAWC,EAAY,EAEvBC,EADSC,EAAU,EACJ,IAAM,aACrB,CAAE,KAAAC,EAAM,UAAAC,CAAU,EAAIV,EAAwB,EACpD,IAAIW,EAAiC,CAAC,EACjCD,IACKC,EAAAT,EAAUO,EAAM,IAAI,EAAE,KAAK,CAACG,EAAiBC,IAAoBD,EAAE,MAAQC,EAAE,KAAK,GAE5FC,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAkB,eAAe,QAAQ,UAAU,EACrD,CAACL,GAAa,CAACK,GACF,eAAA,QAAQ,WAAY,KAAK,UAAUN,GAAA,YAAAA,EAAM,KAAK,EAAE,CAAC,CAClE,EACC,CAACC,CAAS,CAAC,EAER,MAAAM,EAAcC,GAAoC,CACtD,eAAe,QAAQ,WAAY,KAAK,UAAUA,CAAQ,CAAC,EAClDZ,EAAA,IAAIY,EAAS,IAAI,EAAE,CAC9B,EAEE,OAAAC,EAAAA,OAAAC,EAAAA,SAAA,CACE,kBAAC,MAAI,CAAA,UAAU,4CACb,SAACD,EAAAA,OAAA,SAAA,CAAO,UAAU,6DAChB,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,EAAA,OAAC,MAAA,CACC,IAAKjB,EACL,IAAI,OACJ,UAAU,yDACV,MAAO,GACP,OAAQ,EAAA,EALV,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAMA,WACC,IAAE,CAAA,KAAK,IAAI,UAAU,wCAAwC,SAA9D,MAAA,EAAA,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAAA,EAEA,IAAA,CAAA,GAVF,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAWA,EAAA,IAAA,WACC,MAAI,CAAA,UAAU,oBACb,SAAAiB,EAAAA,OAAC,OAAI,UAAU,wDACb,SAACA,EAAAA,OAAA,KAAA,CAAG,UAAU,qCACX,SAAA,CAACR,GACAC,EAAM,IAAKM,GAEPC,EAAA,OAAC,KAAA,CAEC,QAAS,IAAMF,EAAWC,CAAQ,EAClC,UAAW,mFACTV,IAAUU,EAAS,KACf,oCACA,wCACN,GAEC,SAASA,EAAA,KAAA,EARLA,EAAS,IADhB,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAUA,CAEH,CAhBL,EAAA,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAiBA,CAlBF,EAAA,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAmBA,CApBF,EAAA,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAqBA,EAAA,IAAA,EAECP,GACCQ,EAAA,OAAAC,WAAA,CACG,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKC,GAE9BF,EAAA,OAAC,MAAA,CAEC,UAAU,sEAAA,EADLE,EADP,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAGC,CAEJ,CARH,EAAA,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAAA,EASA,IAAA,CAAA,GA9CJ,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAgDA,CAjDF,EAAA,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAkDA,CAnDF,EAAA,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,CAoDA,EAAA,IAAA,CAEJ,CC9EA,SAASC,GAAM,CACb,OAEEH,EAAA,OAAAC,WAAA,CAAA,SAAA,CAAAD,EAAAA,OAACd,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mEAAA,WAAA,EAAA,aAAA,CAAQ,EAAA,IAAA,EACRc,EAAA,OAAC,OAAI,UAAU,kBACf,kBAAC,MAAI,CAAA,UAAU,uCACb,SAAAA,SAACI,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mEAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAAQ,CADV,EAAA,OAAA,GAAA,CAAA,SAAA,mEAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAEA,CAHA,EAAA,OAAA,GAAA,CAAA,SAAA,mEAAA,WAAA,EAAA,aAAA,CAAA,EAIF,IAAA,CAAA,GANE,OAAA,GAAA,CAAA,SAAA,mEAAA,WAAA,EAAA,aAAA,CAOA,EAAA,IAAA,CAEJ,CCZa,MAAAC,EAAU/B,EAAI,gBAAgB,CACzC,UAAYO,IAAW,CACrB,YAAaA,EAAM,MAAmD,CACpE,MAAO,IAAM,YACb,aAAc,CAAC,MAAM,CACtB,CAAA,CACH,EACF,CAAC,EAEY,CACX,oBAAAyB,CACF,EAAID,ECdWE,EAAA,cCOf,SAAwBC,GAAU,CAChC,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAiB,EAAE,EACjD,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAA6C,CAAA,CAAE,EACjF,CAAE,KAAApB,EAAM,UAAAC,CAAU,EAAIc,EAAoB,EAC1CT,EAAkB,eAAe,QAAQ,UAAU,EAEnDiB,EAAcC,GAAkB,CACpCL,EAAcK,CAAK,CACrB,EAEMC,EAAeC,GACAA,EAAM,OAAQC,GAAoCA,EAAK,MAAM,SAAST,CAAU,CAAC,EAIhGU,EAAcD,GAAoC,CACtDL,EAAgBK,CAAI,CACtB,EAEAtB,OAAAA,EAAAA,UAAU,IAAM,CACV,EAACgB,GAAA,MAAAA,EAAc,MAAO,CAACpB,GACTqB,EAAAtB,GAAA,YAAAA,EAAM,KAAK,EAA+B,CAC5D,EACC,CAACC,EAAWK,CAAe,CAAC,EAG5BG,EAAAA,OAAA,MAAA,CAAI,GAAG,MAAM,UAAU,0BACtB,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACA,EAAA,OAAA,MAAA,CAAI,UAAU,cAAf,EAAA,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,CAA8B,EAAA,IAAA,EAC9BA,EAAAA,OAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAA,SAAC,MAAI,CAAA,UAAU,mDACb,SAAAA,EAAA,OAAC,MAAI,CAAA,IAAKO,EAAQ,IAAI,cAAc,MAAO,GAAI,OAAQ,EAAvD,EAAA,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAA2D,CAD7D,EAAA,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,EAEA,EAAA,IAAA,EACAP,EAAA,OAAC,QAAA,CACC,KAAK,OACL,MAAOS,EACP,SAAWW,GAAMN,EAAWM,EAAE,OAAO,KAAK,EAC1C,UAAU,qKAAA,EAJZ,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAA,CAKA,GATF,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,CAUA,EAAA,IAAA,EACApB,EAAA,OAAC,MAAI,CAAA,UAAU,6BAAf,EAAA,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,CAAA,EAA6C,IAAA,CAAA,GAb/C,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,CAcA,EAAA,IAAA,EACAA,EAAAA,OAAC,KACE,CAAA,SAAA,CAACR,GAAawB,EAAYzB,GAAA,YAAAA,EAAM,IAAmC,EAAE,IAAK2B,GAEvElB,EAAAA,OAAC,KAAkB,CAAA,UAAU,OAC3B,SAAAA,EAAA,OAAC,MAAA,CACC,QAAS,IAAMmB,EAAWD,CAAI,EAC9B,UAAW,mEACTN,EAAa,MAAQM,EAAK,IACtB,gBACA,oBACN,GAEC,SAAKA,EAAA,KAAA,EARR,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAA,GADOA,EAAK,IAAd,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,EAWA,EAAA,IAAA,CAEH,CAhBH,EAAA,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,CAAA,EAiBA,IAAA,CAAA,GAjCF,OAAA,GAAA,CAAA,SAAA,oFAAA,WAAA,GAAA,aAAA,CAkCA,EAAA,IAAA,CAEJ,CC5DA,MAAMG,EAASC,EAAoB,CACjC,CACE,KAAM,IACN,iBAAUnB,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,EAAK,EAAAoB,MAAA,EACd,aAAevB,EAAAA,OAAA,MAAA,CAAI,SAAL,SAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,EAAU,EAAAuB,MAAA,EACxB,SAAU,CACR,CACE,KAAM,QACN,QAEIvB,EAAA,OAAAC,WAAA,CAAA,SAAA,CAAAD,EAAAA,OAAC,MAAI,CAAA,UAAU,yIACb,SAAAA,EAAA,OAACQ,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,EAAA,EAAAe,MAAS,CADX,EAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,EAEA,EAAAA,MAAA,EACAvB,EAAA,OAAC,OAAI,UAAU,kBACb,kBAAC,OAAK,CAAA,UAAU,oFAAoF,SAApG,eAAA,EAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,EAAA,EAAAuB,MAEA,CAHF,EAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,EAAA,EAIAA,MAAA,CAAA,GARF,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,EAAA,EASAA,MAAA,CAAA,CAEJ,CACF,CAEJ,CAAC,EAEDC,EAAW,SAAS,eAAe,MAAM,CAAE,EAAE,gBAC1CC,EACC,WAAA,CAAA,SAAAzB,EAAAA,OAAC0B,GAAS,MAAAzD,EACR,SAAA+B,EAAA,OAAC2B,GAAe,OAAAN,CAAhB,EAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,CAAA,EAAAE,MAAgC,CADlC,EAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,MAEA,CAHF,EAAA,OAAA,GAAA,CAAA,SAAA,qEAAA,WAAA,GAAA,aAAA,CAAA,EAIAA,MAAA,CACF"}